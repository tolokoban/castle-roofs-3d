require("mesh-factory",function(e,t){function r(e){this._verticesMap={},this.geometry=new THREE.Geometry,this.material=e||a}function s(e,t,r){return e.toFixed(3)+","+t.toFixed(3)+","+r.toFixed(3)}var a=new THREE.MeshStandardMaterial({metalness:.1,roughness:.5,vertexColors:THREE.VertexColors});r.prototype.toMesh=function(){return this.geometry.computeFaceNormals(),this.geometry.computeVertexNormals(),new THREE.Mesh(this.geometry,this.material)},r.prototype.addQuad=function(e){var t,r=e.pos[0],s=e.pos[1],a=e.pos[2];switch(e.dir){case"X":t=[this.addVertex(r-.5,s+.5,a+.5),this.addVertex(r-.5,s-.5,a+.5),this.addVertex(r-.5,s-.5,a-.5),this.addVertex(r-.5,s+.5,a-.5)];break;case"x":t=[this.addVertex(r-.5,s-.5,a-.5),this.addVertex(r-.5,s-.5,a+.5),this.addVertex(r-.5,s+.5,a+.5),this.addVertex(r-.5,s+.5,a-.5)];break;case"Z":t=[this.addVertex(r+.5,s+.5,a-.5),this.addVertex(r+.5,s-.5,a-.5),this.addVertex(r-.5,s-.5,a-.5),this.addVertex(r-.5,s+.5,a-.5)];break;case"z":t=[this.addVertex(r-.5,s-.5,a-.5),this.addVertex(r+.5,s-.5,a-.5),this.addVertex(r+.5,s+.5,a-.5),this.addVertex(r-.5,s+.5,a-.5)];break;default:t=[this.addVertex(r+.5,s,a+.5),this.addVertex(r-.5,s,a+.5),this.addVertex(r-.5,s,a-.5),this.addVertex(r+.5,s,a-.5)]}var o=new THREE.Face3(t[0],t[3],t[2]);o.vertexColors[0]=o.vertexColors[1]=o.vertexColors[2]=e.color;var d=new THREE.Face3(t[0],t[2],t[1]);d.vertexColors[0]=d.vertexColors[1]=d.vertexColors[2]=e.color,this.geometry.faces.push(o,d)},r.prototype.addVertex=function(e,t,r){var a=s(e,t,r),o=this._verticesMap[a];return"undefined"==typeof o?(this.geometry.vertices.push(new THREE.Vector3(e,t,r)),o=this.geometry.vertices.length-1,this._verticesMap[a]=o,o):o},t.exports=r});
//# sourceMappingURL=mesh-factory.js.map